{"id": "2510.19260", "categories": ["cs.AR", "cs.ET", "eess.IV"], "pdf": "https://arxiv.org/pdf/2510.19260", "abs": "https://arxiv.org/abs/2510.19260", "authors": ["Mukul Lokhande", "Narendra Singh Dhakad", "Seema Chouhan", "Akash Sankhe", "Santosh Kumar Vishvakarma"], "title": "Res-DPU: Resource-shared Digital Processing-in-memory Unit for Edge-AI Workloads", "comment": null, "summary": "Processing-in-memory (PIM) has emerged as the go to solution for addressing\nthe von Neumann bottleneck in edge AI accelerators. However, state-of-the-art\n(SoTA) digital PIM approaches suffer from low compute density, primarily due to\nthe use of bulky bit cells and transistor-heavy adder trees, which impose\nlimitations on macro scalability and energy efficiency. This work introduces\nRes-DPU, a resource-shared digital PIM unit, with a dual-port 5T SRAM latch and\nshared 2T AND compute logic. This reflects the per-bit multiplication cost to\njust 5.25T and reduced the transistor count of the PIM array by up to 56% over\nthe SoTA works. Furthermore, a Transistor-Reduced 2D Interspersed Adder Tree\n(TRAIT) with FA-7T and PG-FA-26T helps reduce the power consumption of the\nadder tree by up to 21.35% and leads to improved energy efficiency by 59%\ncompared to conventional 28T RCA designs. We propose a Cycle-controlled\nIterative Approximate-Accurate Multiplication (CIA2M) approach, enabling\nrun-time accuracy-latency trade-offs without requiring error-correction\ncircuitry. The 16 KB REP-DPIM macro achieves 0.43 TOPS throughput and 87.22\nTOPS/W energy efficiency in TSMC 65nm CMOS, with 96.85% QoR for ResNet-18 or\nVGG-16 on CIFAR-10, including 30% pruning. The proposed results establish a\nRes-DPU module for highly scalable and energy-efficient real-time edge AI\naccelerators."}
{"id": "2510.19577", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2510.19577", "abs": "https://arxiv.org/abs/2510.19577", "authors": ["Zuoming Fu", "Alex Manley", "Mohammad Alian"], "title": "gem5 Co-Pilot: AI Assistant Agent for Architectural Design Space Exploration", "comment": "Accepted by CAMS25, October, 2025, Seoul, Republic of Korea", "summary": "Generative AI is increasing the productivity of software and hardware\ndevelopment across many application domains. In this work, we utilize the power\nof Large Language Models (LLMs) to develop a co-pilot agent for assisting gem5\nusers with automating design space exploration. Computer architecture design\nspace exploration is complex and time-consuming, given that numerous parameter\nsettings and simulation statistics must be analyzed before improving the\ncurrent design. The emergence of LLMs has significantly accelerated the\nanalysis of long-text data as well as smart decision making, two key functions\nin a successful design space exploration task. In this project, we first build\ngem5 Co-Pilot, an AI agent assistant for gem5, which comes with a webpage-GUI\nfor smooth user interaction, agent automation, and result summarization. We\nalso implemented a language for design space exploration, as well as a Design\nSpace Database (DSDB). With DSDB, gem5 Co-Pilot effectively implements a\nRetrieval Augmented Generation system for gem5 design space exploration. We\nexperiment on cost-constraint optimization with four cost ranges and compare\nour results with two baseline models. Results show that gem5 Co-Pilot can\nquickly identify optimal parameters for specific design constraints based on\nperformance and cost, with limited user interaction."}
