{"id": "2510.21745", "categories": ["cs.AR", "cs.DC"], "pdf": "https://arxiv.org/pdf/2510.21745", "abs": "https://arxiv.org/abs/2510.21745", "authors": ["Eashan Wadhwa", "Shanker Shreejith"], "title": "Simopt-Power: Leveraging Simulation Metadata for Low-Power Design Synthesis", "comment": null, "summary": "Excessive switching activity is a primary contributor to dynamic power\ndissipation in modern FPGAs, where fine-grained configurability amplifies\nsignal toggling and associated capacitance. Conventional low-power techniques\n-- gating, clock-domain partitioning, and placement-aware netlist rewrites -\neither require intrusive design changes or offer diminishing returns as device\ndensities grow. In this work, we present Simopt-power, a simulator-driven\noptimisation framework that leverages simulation analysis to identify and\nselectively reconfigure high-toggle paths. By feeding activity profiles back\ninto a lightweight transformation pass, Simopt-power judiciously inserts\nduplicate truth table logic using Shannon Decomposition principle and relocates\ncritical nets, thereby attenuating unnecessary transitions without perturbing\nfunctional behaviour. We evaluated this framework on open-source RTLLM\nbenchmark, with Simopt-power achieves an average switching-induced power\nreduction of ~9\\% while incurring only ~9\\% additional LUT-equivalent resources\nfor arithmetic designs. These results demonstrate that coupling simulation\ninsights with targeted optimisations can yield a reduced dynamic power,\noffering a practical path toward using simulation metadata in the FPGA-CAD\nflow."}
{"id": "2510.22087", "categories": ["cs.AR", "cs.AI", "cs.LG", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.22087", "abs": "https://arxiv.org/abs/2510.22087", "authors": ["Shvetank Prakash", "Andrew Cheng", "Arya Tschand", "Mark Mazumder", "Varun Gohil", "Jeffrey Ma", "Jason Yik", "Zishen Wan", "Jessica Quaye", "Elisavet Lydia Alvanaki", "Avinash Kumar", "Chandrashis Mazumdar", "Tuhin Khare", "Alexander Ingare", "Ikechukwu Uchendu", "Radhika Ghosal", "Abhishek Tyagi", "Chenyu Wang", "Andrea Mattia Garavagno", "Sarah Gu", "Alice Guo", "Grace Hur", "Luca Carloni", "Tushar Krishna", "Ankita Nayak", "Amir Yazdanbakhsh", "Vijay Janapa Reddi"], "title": "QuArch: A Benchmark for Evaluating LLM Reasoning in Computer Architecture", "comment": null, "summary": "The field of computer architecture, which bridges high-level software\nabstractions and low-level hardware implementations, remains absent from\ncurrent large language model (LLM) evaluations. To this end, we present QuArch\n(pronounced 'quark'), the first benchmark designed to facilitate the\ndevelopment and evaluation of LLM knowledge and reasoning capabilities\nspecifically in computer architecture. QuArch provides a comprehensive\ncollection of 2,671 expert-validated question-answer (QA) pairs covering\nvarious aspects of computer architecture, including processor design, memory\nsystems, and interconnection networks. Our evaluation reveals that while\nfrontier models possess domain-specific knowledge, they struggle with skills\nthat require higher-order thinking in computer architecture. Frontier model\naccuracies vary widely (from 34% to 72%) on these advanced questions,\nhighlighting persistent gaps in architectural reasoning across analysis,\ndesign, and implementation QAs. By holistically assessing fundamental skills,\nQuArch provides a foundation for building and measuring LLM capabilities that\ncan accelerate innovation in computing systems. With over 140 contributors from\n40 institutions, this benchmark represents a community effort to set the\nstandard for architectural reasoning in LLM evaluation."}
{"id": "2510.22627", "categories": ["cs.AR", "cs.NE"], "pdf": "https://arxiv.org/pdf/2510.22627", "abs": "https://arxiv.org/abs/2510.22627", "authors": ["Mohd Faisal Khan", "Mukul Lokhande", "Santosh Kumar Vishvakarma"], "title": "RAMAN: Resource-efficient ApproxiMate Posit Processing for Algorithm-Hardware Co-desigN", "comment": "39th International Conference on VLSI Design and 25th International\n  Conference on Embedded Systems (VLSI-D), Pune, India", "summary": "Edge-AI applications still face considerable challenges in enhancing\ncomputational efficiency in resource-constrained environments. This work\npresents RAMAN, a resource-efficient and approximate posit(8,2)-based\nMultiply-Accumulate (MAC) architecture designed to improve hardware efficiency\nwithin bandwidth limitations. The proposed REAP (Resource-Efficient Approximate\nPosit) MAC engine, which is at the core of RAMAN, uses approximation in the\nposit multiplier to achieve significant area and power reductions with an\nimpact on accuracy. To support diverse AI workloads, this MAC unit is\nincorporated in a scalable Vector Execution Unit (VEU), which permits hardware\nreuse and parallelism among deep neural network layers. Furthermore, we propose\nan algorithm-hardware co-design framework incorporating approximation-aware\ntraining to evaluate the impact of hardware-level approximation on\napplication-level performance. Empirical validation on FPGA and ASIC platforms\nshows that the proposed REAP MAC achieves up to 46% in LUT savings and 35.66%\narea, 31.28% power reduction, respectively, over the baseline Posit Dot-Product\nUnit (PDPU) design, while maintaining high accuracy (98.45%) for handwritten\ndigit recognition. RAMAN demonstrates a promising trade-off between hardware\nefficiency and learning performance, making it suitable for next-generation\nedge intelligence."}
{"id": "2510.22674", "categories": ["cs.AR", "cs.IT", "eess.IV", "math.IT"], "pdf": "https://arxiv.org/pdf/2510.22674", "abs": "https://arxiv.org/abs/2510.22674", "authors": ["L. Hemanth Krishna", "Srinivasu Bodapati", "Sreehari Veeramachaneni", "BhaskaraRao Jammu", "Noor Mahammad Sk"], "title": "Approximate Signed Multiplier with Sign-Focused Compressor for Edge Detection Applications", "comment": "15 pages", "summary": "This paper presents an approximate signed multiplier architecture that\nincorporates a sign-focused compressor, specifically designed for edge\ndetection applications in machine learning and signal processing. The\nmultiplier incorporates two types of sign-focused compressors: A + B + C + 1\nand A + B + C + D + 1. Both exact and approximate compressor designs are\nutilized, with a focus on efficiently handling constant value \"1\" and negative\npartial products, which frequently appear in the partial product matrices of\nsigned multipliers. To further enhance efficiency, the lower N - 1 columns of\nthe partial product matrix are truncated, followed by an error compensation\nmechanism. Experimental results show that the proposed 8-bit approximate\nmultiplier achieves a 29.21% reduction in power delay product (PDP) and a\n14.39% reduction in power compared to the best of existing multipliers. The\nproposed multiplier is integrated into a custom convolution layer and performs\nedge detection, demonstrating its practical utility in real-world applications."}
