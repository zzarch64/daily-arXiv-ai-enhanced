{"id": "2509.20514", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.20514", "abs": "https://arxiv.org/abs/2509.20514", "authors": ["Ian McDougall", "Harish Batchu", "Michael Davies", "Karthikeyan Sankaralingam"], "title": "Pedagogically Motivated and Composable Open-Source RISC-V Processors for Computer Science Education", "comment": "8 pages, 2 figures", "summary": "While most instruction set architectures (ISAs) are only available to use\nthrough the purchase of a restrictive commercial license, the RISC-V ISA\npresents a free and open-source alternative. Due to this availability, many\nfree and open-source implementations have been developed and can be accessed on\nplatforms such as GitHub. If an open source, easy-to-use, and robust RISC-V\nimplementation could be obtained, it could be easily adapted for pedagogical\nand amateur use. In this work we accomplish three goals in relation to this\noutlook. First, we propose a set of criteria for evaluating the components of a\nRISC-V implementation's ecosystem from a pedagogical perspective. Second, we\nanalyze a number of existing open-source RISC-V implementations to determine\nhow many of the criteria they fulfill. We then develop a comprehensive solution\nthat meets all of these criterion and is released open-source for other\ninstructors to use. The framework is developed in a composable way that it's\ndifferent components can be disaggregated per individual course needs. Finally,\nwe also report on a limited study of student feedback."}
{"id": "2509.20543", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.20543", "abs": "https://arxiv.org/abs/2509.20543", "authors": ["Daniel Ruelas-Petrisko", "Farzam Gilani", "Anoop Mysore Nataraja", "Zoe Taylor", "Michael Taylor"], "title": "ZynqParrot: A Scale-Down Approach to Cycle-Accurate, FPGA-Accelerated Co-Emulation", "comment": null, "summary": "As processors increase in complexity, costs grow even more rapidly, both for\nfunctional verification and performance validation. Most often, silicon\ncharacterizations comprise simple performance counters, which are aggregated\nand separated to tell a story. Based on these inferences, performance engineers\nemploy microarchitectural simulation to inspect deeply into the core.\nUnfortunately, dramatically longer runtimes make simulation infeasible for long\nworkloads.\n  We propose a Scale-Down approach to modelling and validation. Rather than\nup-sizing a prototyping platform to fit large and complex system designs, we\nshow that it can be more accurate, faster, and more economical to decompose a\nsystem into manageable sub-components that can be prototyped independently. By\ncarefully designing the prototyping interface, it is possible to adhere to\nstrict non-interference of the Device Under Test (DUT). This allows architects\nto have the best of both worlds: the speed of FPGA acceleration while\neliminating the inaccuracies of Scale-Out and the inherent costs of Scale-Up.\n  In this work, we present ZynqParrot: a Scale-Down FPGA-based modelling\nplatform, capable of executing non-interfering, cycle-accurate co-emulations of\narbitrary RTL designs. ZynqParrot is capable of verifying functionality and\nperformance with arbitrary granularity. We also provide case studies using\nZynqParrot to analyze the full-stack performance of an open-source RISC-V\nprocessor."}
