{"id": "2509.10627", "categories": ["cs.AR", "cs.ET"], "pdf": "https://arxiv.org/pdf/2509.10627", "abs": "https://arxiv.org/abs/2509.10627", "authors": ["Yu-Hong Lai", "Chieh-Lin Tsai", "Wen Sheng Lim", "Han-Wen Hu", "Tei-Wei Kuo", "Yuan-Hao Chang"], "title": "ReCross: Efficient Embedding Reduction Scheme for In-Memory Computing using ReRAM-Based Crossbar", "comment": null, "summary": "Deep learning-based recommendation models (DLRMs) are widely deployed in\ncommercial applications to enhance user experience. However, the large and\nsparse embedding layers in these models impose substantial memory bandwidth\nbottlenecks due to high memory access costs and irregular access patterns,\nleading to increased inference time and energy consumption. While resistive\nrandom access memory (ReRAM) based crossbars offer a fast and energy-efficient\nsolution through in-memory embedding reduction operations, naively mapping\nembeddings onto crossbar arrays leads to poor crossbar utilization and thus\ndegrades performance. We present ReCross, an efficient ReRAM-based in-memory\ncomputing (IMC) scheme designed to minimize execution time and enhance energy\nefficiency in DLRM embedding reduction. ReCross co-optimizes embedding access\npatterns and ReRAM crossbar characteristics by intelligently grouping and\nmapping co-occurring embeddings, replicating frequently accessed embeddings\nacross crossbars, and dynamically selecting in-memory processing operations\nusing a newly designed dynamic switch ADC circuit that considers runtime energy\ntrade-offs. Experimental results demonstrate that ReCross achieves a 3.97x\nreduction in execution time and a 6.1x improvement in energy efficiency\ncompared to state-of-the-art IMC approaches."}
{"id": "2509.10702", "categories": ["cs.AR", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.10702", "abs": "https://arxiv.org/abs/2509.10702", "authors": ["Charles Hong", "Qijing Huang", "Grace Dinh", "Mahesh Subedar", "Yakun Sophia Shao"], "title": "DOSA: Differentiable Model-Based One-Loop Search for DNN Accelerators", "comment": "Published at MICRO 2023", "summary": "In the hardware design space exploration process, it is critical to optimize\nboth hardware parameters and algorithm-to-hardware mappings. Previous work has\nlargely approached this simultaneous optimization problem by separately\nexploring the hardware design space and the mapspace - both individually large\nand highly nonconvex spaces - independently. The resulting combinatorial\nexplosion has created significant difficulties for optimizers.\n  In this paper, we introduce DOSA, which consists of differentiable\nperformance models and a gradient descent-based optimization technique to\nsimultaneously explore both spaces and identify high-performing design points.\nExperimental results demonstrate that DOSA outperforms random search and\nBayesian optimization by 2.80x and 12.59x, respectively, in improving DNN model\nenergy-delay product, given a similar number of samples. We also demonstrate\nthe modularity and flexibility of DOSA by augmenting our analytical model with\na learned model, allowing us to optimize buffer sizes and mappings of a real\nDNN accelerator and attain a 1.82x improvement in energy-delay product."}
{"id": "2509.10751", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.10751", "abs": "https://arxiv.org/abs/2509.10751", "authors": ["Lucas M. Leipnitz de Fraga", "Cl√°udio Machado Diniz"], "title": "Design and Analysis of Approximate Hardware Accelerators for VVC Intra Angular Prediction", "comment": "Accepted SBCCI 2025", "summary": "The Versatile Video Coding (VVC) standard significantly improves compression\nefficiency over its predecessor, HEVC, but at the cost of substantially higher\ncomputational complexity, particularly in intra-frame prediction. This stage\nemploys various directional modes, each requiring multiple multiplications\nbetween reference samples and constant coefficients. To optimize these\noperations at hardware accelerators, multiplierless constant multiplication\n(MCM) blocks offer a promising solution. However, VVC's interpolation filters\nhave more than fifty distinct coefficients, making MCM implementations\nresource-intensive. This work proposes an approximation method to reduce the\nnumber of interpolation coefficients by averaging fixed subsets of them,\ntherefore decreasing MCM block size and potentially lowering circuit area and\npower consumption. Six different MCM block architectures for angular intra\nprediction are introduced, in which five use the approximation method\nintroduced in this work, and evaluate the trade-off between coefficient\nreduction and coding efficiency compared with a conventional multiplier\narchitecture. Experimental results in ten videos demonstrate that only two MCM\nimplementations exceed a 4% BD-Rate increase and 2.6% on average in the worst\ncase, while two of the MCM implementations have circuit area reduction of 20%\nand 44%. For three of the architectures, parallel sample prediction modules\nwere synthesized, showing a reduction of 30% gate area compared to single\nsample processing units, and a reduction in energy consumption for two of the\nimplementations."}
{"id": "2509.11503", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.11503", "abs": "https://arxiv.org/abs/2509.11503", "authors": ["Rishab Parthasarathy", "Akshay Attaluri", "Gilford Ting"], "title": "always_comm: An FPGA-based Hardware Accelerator for Audio/Video Compression and Transmission", "comment": "8 pages, 8 figures, 1 table, equal contribution", "summary": "We present a design for an extensible video conferencing stack implemented\nentirely in hardware on a Nexys4 DDR FPGA, which uses the M-JPEG codec to\ncompress video and a UDP networking stack to communicate between the FPGA and\nthe receiving computer. This networking stack accepts real-time updates from\nboth the video codec and the audio controller, which means that video will be\nable to be streamed at 30 FPS from the FPGA to a computer. On the computer\nside, a Python script reads the Ethernet packets and decodes the packets into\nthe video and the audio for real time playback. We evaluate this architecture\nusing both functional, simulation-driven verification in Cocotb and by\nsynthesizing SystemVerilog RTL code using Vivado for deployment on our Nexys4\nDDR FPGA, where we evaluate both end-to-end latency and throughput of video\ntransmission."}
{"id": "2509.11529", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.11529", "abs": "https://arxiv.org/abs/2509.11529", "authors": ["Rishab Parthasarathy"], "title": "SuperUROP: An FPGA-Based Spatial Accelerator for Sparse Matrix Operations", "comment": "7 pages, 6 figures, work done as the Citadel Undergraduate Research\n  Scholar in the MIT SuperUROP program", "summary": "Solving sparse systems of linear equations is a fundamental problem in the\nfield of numerical methods, with applications spanning from circuit design to\nurban planning. These problems can have millions of constraints, such as when\nlaying out transistors on a circuit, or trying to optimize traffic light\ntimings, making fast sparse solvers extremely important. However, existing\nstate-of-the-art software-level solutions for solving sparse linear systems,\ntermed iterative solvers, are extremely inefficient on current hardware. This\ninefficiency can be attributed to two key reasons: (1) poor short-term data\nreuse, which causes frequent, irregular memory accesses, and (2) complex data\ndependencies, which limit parallelism. Hence, in this paper, we present an FPGA\nimplementation of the existing Azul accelerator, an SRAM-only hardware\naccelerator that achieves both high memory bandwidth utilization and arithmetic\nintensity. Azul features a grid of tiles, each of which is composed of a\nprocessing element (PE) and a small independent SRAM memory, which are all\nconnected over a network on chip (NoC). We implement Azul on FPGA using simple\nRISC-V CPU cores connected to a memory hierarchy of different FPGA memory\nmodules. We utilize custom RISC-V ISA augmentations to implement a task-based\nprogramming model for the various PEs, allowing communication over the NoC.\nFinally, we design simple distributed test cases so that we can functionally\nverify the FPGA implementation, verifying equivalent performance to an\narchitectural simulation of the Azul framework."}
{"id": "2509.12053", "categories": ["cs.AR", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2509.12053", "abs": "https://arxiv.org/abs/2509.12053", "authors": ["Yujun Lin", "Zhekai Zhang", "Song Han"], "title": "LEGO: Spatial Accelerator Generation and Optimization for Tensor Applications", "comment": "The first two authors have equal contributions; Published as a\n  conference paper in HPCA 2025; 13 pages, 14 figures", "summary": "Modern tensor applications, especially foundation models and generative AI\napplications require multiple input modalities (both vision and language),\nwhich increases the demand for flexible accelerator architecture. Existing\nframeworks suffer from the trade-off between design flexibility and\nproductivity of RTL generation: either limited to very few hand-written\ntemplates or cannot automatically generate the RTL. To address this challenge,\nwe propose the LEGO framework, which targets tensor applications and\nautomatically generates spatial architecture design and outputs synthesizable\nRTL code without handwritten RTL design templates. Leveraging the\naffine-transformation-based architecture representation, LEGO front end finds\ninterconnections between function units, synthesizes the memory system, and\nfuses different spatial dataflow designs based on data reuse analysis. LEGO\nback end then translates the hardware in a primitive-level graph to perform\nlower-level optimizations, and applies a set of linear-programming algorithms\nto optimally insert pipeline registers and reduce the overhead of unused logic\nwhen switching spatial dataflows. Our evaluation demonstrates that LEGO can\nachieve 3.2x speedup and 2.4x energy efficiency compared to previous work\nGemmini, and can generate one architecture for diverse modern foundation models\nin generative AI applications."}
