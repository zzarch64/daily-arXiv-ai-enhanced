{"id": "2510.25278", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2510.25278", "abs": "https://arxiv.org/abs/2510.25278", "authors": ["Kunming Shao", "Zhipeng Liao", "Jiangnan Yu", "Liang Zhao", "Qiwei Li", "Xijie Huang", "Jingyu He", "Fengshi Tian", "Yi Zou", "Xiaomeng Wang", "Tim Kwang-Ting Cheng", "Chi-Ying Tsui"], "title": "DIRC-RAG: Accelerating Edge RAG with Robust High-Density and High-Loading-Bandwidth Digital In-ReRAM Computation", "comment": "Accepted by 2025 IEEE/ACM ISLPED", "summary": "Retrieval-Augmented Generation (RAG) enhances large language models (LLMs) by\nintegrating external knowledge retrieval but faces challenges on edge devices\ndue to high storage, energy, and latency demands. Computing-in-Memory (CIM)\noffers a promising solution by storing document embeddings in CIM macros and\nenabling in-situ parallel retrievals but is constrained by either low memory\ndensity or limited computational accuracy. To address these challenges, we\npresent DIRCRAG, a novel edge RAG acceleration architecture leveraging Digital\nIn-ReRAM Computation (DIRC). DIRC integrates a high-density multi-level ReRAM\nsubarray with an SRAM cell, utilizing SRAM and differential sensing for robust\nReRAM readout and digital multiply-accumulate (MAC) operations. By storing all\ndocument embeddings within the CIM macro, DIRC achieves ultra-low-power,\nsingle-cycle data loading, substantially reducing both energy consumption and\nlatency compared to offchip DRAM. A query-stationary (QS) dataflow is supported\nfor RAG tasks, minimizing on-chip data movement and reducing SRAM buffer\nrequirements. We introduce error optimization for the DIRC ReRAM-SRAM cell by\nextracting the bit-wise spatial error distribution of the ReRAM subarray and\napplying targeted bit-wise data remapping. An error detection circuit is also\nimplemented to enhance readout resilience against deviceand circuit-level\nvariations. Simulation results demonstrate that DIRC-RAG under TSMC40nm process\nachieves an on-chip non-volatile memory density of 5.18Mb/mm2 and a throughput\nof 131 TOPS. It delivers a 4MB retrieval latency of 5.6{\\mu}s/query and an\nenergy consumption of 0.956{\\mu}J/query, while maintaining the retrieval\nprecision."}
