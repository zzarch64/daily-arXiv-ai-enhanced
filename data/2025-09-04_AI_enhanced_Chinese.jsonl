{"id": "2509.02873", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.02873", "abs": "https://arxiv.org/abs/2509.02873", "authors": ["Zhantong Qiu", "Mahyar Samani", "Jason Lowe-Power"], "title": "Portable Targeted Sampling Framework Using LLVM", "comment": null, "summary": "Comprehensive architectural evaluation of full workloads is throttled by slow\nsimulation and per-binary sampling pipelines. We present Nugget, a flexible\nframework for portable sampling across simulators and real hardware, ISAs, and\nlibraries. Nugget operates at the LLVM IR level to perform binary-agnostic\ninterval analysis, then emits lightweight, cross-platform\nexecutables--nuggets--that can be validated on real machines before driving\nsimulation. Across SPEC CPU2017, NPB, and LSMS, Nugget cuts interval-analysis\ncost by orders of magnitude relative to functional simulation (up to ~578X on\nmultithreaded NPB), keeps single-thread overhead low, and enables native-speed\nvalidation of selected samples. Case studies with gem5 show that nuggets\nsupport evaluation of system performance and model accuracy. Nugget makes\nsampling methodology research faster and more portable.", "AI": {"tldr": "Nugget\u662f\u4e00\u4e2a\u7075\u6d3b\u7684\u91c7\u6837\u6846\u67b6\uff0c\u901a\u8fc7LLVM IR\u7ea7\u522b\u7684\u4e8c\u8fdb\u5236\u65e0\u5173\u533a\u95f4\u5206\u6790\uff0c\u5927\u5e45\u964d\u4f4e\u67b6\u6784\u8bc4\u4f30\u6210\u672c\uff0c\u652f\u6301\u8de8\u5e73\u53f0\u9a8c\u8bc1\u548c\u4eff\u771f\u3002", "motivation": "\u5168\u9762\u7684\u67b6\u6784\u8bc4\u4f30\u53d7\u5230\u4eff\u771f\u901f\u5ea6\u6162\u548c\u9010\u4e8c\u8fdb\u5236\u91c7\u6837\u6d41\u7a0b\u7684\u9650\u5236\uff0c\u9700\u8981\u4e00\u79cd\u66f4\u9ad8\u6548\u3001\u53ef\u79fb\u690d\u7684\u91c7\u6837\u65b9\u6cd5\u3002", "method": "\u5728LLVM IR\u7ea7\u522b\u8fdb\u884c\u4e8c\u8fdb\u5236\u65e0\u5173\u7684\u533a\u95f4\u5206\u6790\uff0c\u751f\u6210\u8f7b\u91cf\u7ea7\u3001\u8de8\u5e73\u53f0\u7684\u53ef\u6267\u884c\u6587\u4ef6(nuggets)\uff0c\u652f\u6301\u5728\u771f\u5b9e\u786c\u4ef6\u4e0a\u9a8c\u8bc1\u540e\u9a71\u52a8\u4eff\u771f\u3002", "result": "\u5728SPEC CPU2017\u3001NPB\u548cLSMS\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u76f8\u6bd4\u529f\u80fd\u4eff\u771f\u5c06\u533a\u95f4\u5206\u6790\u6210\u672c\u964d\u4f4e\u4e86\u6570\u4e2a\u6570\u91cf\u7ea7(\u591a\u7ebf\u7a0bNPB\u6700\u9ad8\u8fbe578\u500d)\uff0c\u5355\u7ebf\u7a0b\u5f00\u9500\u4f4e\uff0c\u652f\u6301\u539f\u751f\u901f\u5ea6\u9a8c\u8bc1\u3002", "conclusion": "Nugget\u4f7f\u91c7\u6837\u65b9\u6cd5\u7814\u7a76\u66f4\u5feb\u3001\u66f4\u53ef\u79fb\u690d\uff0c\u652f\u6301\u7cfb\u7edf\u6027\u80fd\u548c\u6a21\u578b\u51c6\u786e\u6027\u7684\u8bc4\u4f30\u3002"}}
{"id": "2509.03103", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.03103", "abs": "https://arxiv.org/abs/2509.03103", "authors": ["Abdul Rahoof", "Vivek Chaturvedi", "Muhammad Shafique"], "title": "FastCaps: A Design Methodology for Accelerating Capsule Network on Field Programmable Gate Arrays", "comment": "2023 International Joint Conference on Neural Networks (IJCNN)", "summary": "Capsule Network (CapsNet) has shown significant improvement in understanding\nthe variation in images along with better generalization ability compared to\ntraditional Convolutional Neural Network (CNN). CapsNet preserves spatial\nrelationship among extracted features and apply dynamic routing to efficiently\nlearn the internal connections between capsules. However, due to the capsule\nstructure and the complexity of the routing mechanism, it is non-trivial to\naccelerate CapsNet performance in its original form on Field Programmable Gate\nArray (FPGA). Most of the existing works on CapsNet have achieved limited\nacceleration as they implement only the dynamic routing algorithm on FPGA,\nwhile considering all the processing steps synergistically is important for\nreal-world applications of Capsule Networks. Towards this, we propose a novel\ntwo-step approach that deploys a full-fledged CapsNet on FPGA. First, we prune\nthe network using a novel Look-Ahead Kernel Pruning (LAKP) methodology that\nuses the sum of look-ahead scores of the model parameters. Next, we simplify\nthe nonlinear operations, reorder loops, and parallelize operations of the\nrouting algorithm to reduce CapsNet hardware complexity. To the best of our\nknowledge, this is the first work accelerating a full-fledged CapsNet on FPGA.\nExperimental results on the MNIST and F-MNIST datasets (typical in Capsule\nNetwork community) show that the proposed LAKP approach achieves an effective\ncompression rate of 99.26% and 98.84%, and achieves a throughput of 82 FPS and\n48 FPS on Xilinx PYNQ-Z1 FPGA, respectively. Furthermore, reducing the hardware\ncomplexity of the routing algorithm increases the throughput to 1351 FPS and\n934 FPS respectively. As corroborated by our results, this work enables highly\nperformance-efficient deployment of CapsNets on low-cost FPGA that are popular\nin modern edge devices.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u5728FPGA\u4e0a\u52a0\u901f\u5b8c\u6574\u80f6\u56ca\u7f51\u7edc\u7684\u4e24\u6b65\u65b9\u6cd5\uff1a\u9996\u5148\u4f7f\u7528\u524d\u77bb\u6838\u526a\u679d(LAKP)\u538b\u7f29\u7f51\u7edc\uff0c\u7136\u540e\u7b80\u5316\u8def\u7531\u7b97\u6cd5\u7684\u975e\u7ebf\u6027\u64cd\u4f5c\u548c\u5e76\u884c\u5316\u5904\u7406\uff0c\u5b9e\u73b0\u4e8699%\u4ee5\u4e0a\u7684\u538b\u7f29\u7387\u548c\u663e\u8457\u7684\u901f\u5ea6\u63d0\u5347\u3002", "motivation": "\u80f6\u56ca\u7f51\u7edc(CapsNet)\u76f8\u6bd4\u4f20\u7edfCNN\u5728\u7406\u89e3\u56fe\u50cf\u53d8\u5316\u548c\u6cdb\u5316\u80fd\u529b\u65b9\u9762\u6709\u663e\u8457\u6539\u8fdb\uff0c\u4f46\u7531\u4e8e\u80f6\u56ca\u7ed3\u6784\u548c\u8def\u7531\u673a\u5236\u7684\u590d\u6742\u6027\uff0c\u5728FPGA\u4e0a\u52a0\u901f\u5b8c\u6574CapsNet\u5177\u6709\u6311\u6218\u6027\u3002\u73b0\u6709\u5de5\u4f5c\u4ec5\u5b9e\u73b0\u52a8\u6001\u8def\u7531\u7b97\u6cd5\uff0c\u65e0\u6cd5\u6ee1\u8db3\u5b9e\u9645\u5e94\u7528\u9700\u6c42\u3002", "method": "\u63d0\u51fa\u4e24\u6b65\u65b9\u6cd5\uff1a1) \u4f7f\u7528\u65b0\u9896\u7684\u524d\u77bb\u6838\u526a\u679d(LAKP)\u65b9\u6cd5\u526a\u679d\u7f51\u7edc\uff0c\u57fa\u4e8e\u6a21\u578b\u53c2\u6570\u7684\u524d\u77bb\u8bc4\u5206\u603b\u548c\uff1b2) \u7b80\u5316\u8def\u7531\u7b97\u6cd5\u7684\u975e\u7ebf\u6027\u64cd\u4f5c\u3001\u91cd\u6392\u5e8f\u5faa\u73af\u548c\u5e76\u884c\u5316\u64cd\u4f5c\uff0c\u964d\u4f4e\u786c\u4ef6\u590d\u6742\u5ea6\u3002", "result": "\u5728MNIST\u548cF-MNIST\u6570\u636e\u96c6\u4e0a\uff0cLAKP\u65b9\u6cd5\u5206\u522b\u5b9e\u73b099.26%\u548c98.84%\u7684\u6709\u6548\u538b\u7f29\u7387\uff0c\u5728PYNQ-Z1 FPGA\u4e0a\u5206\u522b\u8fbe\u523082FPS\u548c48FPS\u7684\u541e\u5410\u91cf\u3002\u7b80\u5316\u8def\u7531\u7b97\u6cd5\u540e\u541e\u5410\u91cf\u5206\u522b\u63d0\u5347\u81f31351FPS\u548c934FPS\u3002", "conclusion": "\u8fd9\u9879\u5de5\u4f5c\u9996\u6b21\u5728\u4f4e\u6210\u672cFPGA\u4e0a\u5b9e\u73b0\u4e86\u5b8c\u6574\u80f6\u56ca\u7f51\u7edc\u7684\u9ad8\u6027\u80fd\u9ad8\u6548\u90e8\u7f72\uff0c\u4e3a\u73b0\u4ee3\u8fb9\u7f18\u8bbe\u5907\u4e2d\u7684CapsNet\u5e94\u7528\u63d0\u4f9b\u4e86\u53ef\u884c\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2509.03201", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.03201", "abs": "https://arxiv.org/abs/2509.03201", "authors": ["Abdul Rahoof", "Vivek Chaturvedi", "Mahesh Raveendranatha Panicker", "Muhammad Shafique"], "title": "CapsBeam: Accelerating Capsule Network based Beamformer for Ultrasound Non-Steered Plane Wave Imaging on Field Programmable Gate Array", "comment": null, "summary": "In recent years, there has been a growing trend in accelerating\ncomputationally complex non-real-time beamforming algorithms in ultrasound\nimaging using deep learning models. However, due to the large size and\ncomplexity these state-of-the-art deep learning techniques poses significant\nchallenges when deploying on resource-constrained edge devices. In this work,\nwe propose a novel capsule network based beamformer called CapsBeam, designed\nto operate on raw radio-frequency data and provide an envelope of beamformed\ndata through non-steered plane wave insonification. Experiments on in-vivo\ndata, CapsBeam reduced artifacts compared to the standard Delay-and-Sum (DAS)\nbeamforming. For in-vitro data, CapsBeam demonstrated a 32.31% increase in\ncontrast, along with gains of 16.54% and 6.7% in axial and lateral resolution\ncompared to the DAS. Similarly, in-silico data showed a 26% enhancement in\ncontrast, along with improvements of 13.6% and 21.5% in axial and lateral\nresolution, respectively, compared to the DAS. To reduce the parameter\nredundancy and enhance the computational efficiency, we pruned the model using\nour multi-layer LookAhead Kernel Pruning (LAKP-ML) methodology, achieving a\ncompression ratio of 85% without affecting the image quality. Additionally, the\nhardware complexity of the proposed model is reduced by applying quantization,\nsimplification of non-linear operations, and parallelizing operations. Finally,\nwe proposed a specialized accelerator architecture for the pruned and optimized\nCapsBeam model, implemented on a Xilinx ZU7EV FPGA. The proposed accelerator\nachieved a throughput of 30 GOPS for the convolution operation and 17.4 GOPS\nfor the dynamic routing operation.", "AI": {"tldr": "\u57fa\u4e8e\u80f6\u56ca\u7f51\u7edc\u7684CapsBeam\u6750\u6750\u5f62\u6210\u7b97\u6cd5\uff0c\u901a\u8fc7\u526a\u679d\u548c\u91cf\u5316\u4f18\u5316\uff0c\u5728FPGA\u4e0a\u5b9e\u73b0\u9ad8\u6548\u52a0\u901f\uff0c\u663e\u8457\u63d0\u5347\u4e86\u8d85\u58f0\u6210\u50cf\u8d28\u91cf\u548c\u8ba1\u7b97\u6548\u7387\u3002", "motivation": "\u73b0\u6709\u6df1\u5ea6\u5b66\u4e60\u6750\u6750\u5f62\u6210\u7b97\u6cd5\u6a21\u578b\u8fc7\u5927\u8fc7\u590d\u6742\uff0c\u5728\u8fb9\u7f18\u8bbe\u5907\u4e0a\u90e8\u7f72\u9762\u4e34\u91cd\u5927\u6311\u6218\uff0c\u9700\u8981\u8f7b\u91cf\u5316\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002", "method": "\u8bbe\u8ba1CapsBeam\u80f6\u56ca\u7f51\u7edc\u6750\u6750\u5f62\u6210\u5668\uff0c\u4f7f\u7528LAKP-ML\u591a\u5c42\u9884\u89c8\u5185\u6838\u526a\u679d\u6280\u672f\u51cf\u5c11\u53c2\u6570\u5197\u4f59\uff0c\u901a\u8fc7\u91cf\u5316\u3001\u975e\u7ebf\u6027\u64cd\u4f5c\u7b80\u5316\u548c\u5e76\u884c\u5316\u964d\u4f4e\u786c\u4ef6\u590d\u6742\u5ea6\uff0c\u5e76\u5728FPGA\u4e0a\u5b9e\u73b0\u4e13\u95e8\u52a0\u901f\u5668\u3002", "result": "\u4e0e\u6807\u51c6DAS\u7b97\u6cd5\u76f8\u6bd4\uff0cCapsBeam\u5728\u79bb\u4f53\u5b9e\u9a8c\u4e2d\u63d0\u5347\u5bf9\u6bd432.31%\uff0c\u8f74\u5411\u548c\u4fa7\u5411\u5206\u8fa8\u7387\u5206\u522b\u63d0\u534716.54%\u548c6.7%\uff1b\u8ba1\u7b97\u673a\u6a21\u62df\u6570\u636e\u4e2d\u5bf9\u6bd4\u5ea6\u63d0\u534726%\uff0c\u5206\u8fa8\u7387\u63d0\u534713.6%\u548c21.5%\u3002\u526a\u679d\u540e\u6a21\u578b\u538b\u7f29\u6bd485%\uff0cFPGA\u52a0\u901f\u5668\u5b8c\u6210\u5377\u79ef\u64cd\u4f5c30 GOPS\u548c\u52a8\u6001\u8def\u7531\u64cd\u4f5c17.4 GOPS\u3002", "conclusion": "CapsBeam\u7ed3\u5408\u526a\u679d\u4f18\u5316\u6280\u672f\u80fd\u591f\u5728\u4fdd\u6301\u56fe\u50cf\u8d28\u91cf\u7684\u540c\u65f6\u663e\u8457\u51cf\u5c11\u6a21\u578b\u89c4\u6a21\u548c\u8ba1\u7b97\u590d\u6742\u5ea6\uff0c\u4e3a\u8fb9\u7f18\u8bbe\u5907\u4e0a\u90e8\u7f72\u9ad8\u6027\u80fd\u8d85\u58f0\u6750\u6750\u5f62\u6210\u7b97\u6cd5\u63d0\u4f9b\u4e86\u53ef\u884c\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2509.03377", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2509.03377", "abs": "https://arxiv.org/abs/2509.03377", "authors": ["Rui Xie", "Asad Ul Haq", "Linsen Ma", "Yunhua Fang", "Zirak Burzin Engineer", "Liu Liu", "Tong Zhang"], "title": "Amplifying Effective CXL Memory Bandwidth for LLM Inference via Transparent Near-Data Processing", "comment": null, "summary": "Large language model (LLM) inference is bottlenecked by the limited bandwidth\nof CXL-based memory used for capacity expansion. We introduce CXL-NDP, a\ntransparent near-data processing architecture that amplifies effective CXL\nbandwidth without requiring changes to the CXL.mem interface or AI models.\nCXL-NDP integrates a precision-scalable bit-plane layout for dynamic\nquantization with transparent lossless compression of weights and KV caches\ndirectly within the CXL device. In end-to-end serving, CXL-NDP improves\nthroughput by 43%, extends the maximum context length by 87%, and reduces the\nKV cache footprint by 46.9% without accuracy loss. Hardware synthesis confirms\nits practicality with a modest silicon footprint, lowering the barrier for\nadopting efficient, scalable CXL-based memory in generative AI infrastructure.", "AI": {"tldr": "CXL-NDP\u662f\u4e00\u79cd\u900f\u660e\u8fd1\u6570\u636e\u5904\u7406\u67b6\u6784\uff0c\u901a\u8fc7\u52a8\u6001\u91cf\u5316\u548c\u65e0\u635f\u538b\u7f29\u6280\u672f\uff0c\u5728\u4e0d\u6539\u53d8CXL\u63a5\u53e3\u548cAI\u6a21\u578b\u7684\u60c5\u51b5\u4e0b\uff0c\u663e\u8457\u63d0\u5347LLM\u63a8\u7406\u6027\u80fd\u3002", "motivation": "\u5927\u578b\u8bed\u8a00\u6a21\u578b\u63a8\u7406\u53d7\u9650\u4e8eCXL\u5185\u5b58\u6269\u5c55\u7684\u5e26\u5bbd\u74f6\u9888\uff0c\u9700\u8981\u4e00\u79cd\u900f\u660e\u4e14\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848\u6765\u63d0\u5347CXL\u5e26\u5bbd\u5229\u7528\u7387\u3002", "method": "\u5728CXL\u8bbe\u5907\u5185\u90e8\u96c6\u6210\u7cbe\u5ea6\u53ef\u6269\u5c55\u7684\u4f4d\u5e73\u9762\u5e03\u5c40\u8fdb\u884c\u52a8\u6001\u91cf\u5316\uff0c\u5e76\u5bf9\u6743\u91cd\u548cKV\u7f13\u5b58\u8fdb\u884c\u900f\u660e\u65e0\u635f\u538b\u7f29\u3002", "result": "\u7aef\u5230\u7aef\u670d\u52a1\u4e2d\uff0c\u541e\u5410\u91cf\u63d0\u534743%\uff0c\u6700\u5927\u4e0a\u4e0b\u6587\u957f\u5ea6\u6269\u5c5587%\uff0cKV\u7f13\u5b58\u5360\u7528\u51cf\u5c1146.9%\uff0c\u4e14\u65e0\u7cbe\u5ea6\u635f\u5931\u3002\u786c\u4ef6\u5408\u6210\u9a8c\u8bc1\u4e86\u5176\u5b9e\u9645\u53ef\u884c\u6027\u3002", "conclusion": "CXL-NDP\u4e3a\u751f\u6210\u5f0fAI\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u4e86\u9ad8\u6548\u3001\u53ef\u6269\u5c55\u7684CXL\u5185\u5b58\u89e3\u51b3\u65b9\u6848\uff0c\u964d\u4f4e\u4e86\u91c7\u7528\u95e8\u69db\u3002"}}
